
STATUS

This set of modules was written in December 2000.  This is quite recent,
so please check for a new version: new software often sees many changes in
the first few months.

The release status of the whole package is   ***** BETA *****
There are many tests, but they do not cover every situation yet.
The first BETA had version 1.0.  The module will go out of BETA if I
learn of any application which successfully uses Mail::Box.


Tested
======

In the `t' directory, there are quite a number of tests, but they only
test some parts of the program.  Other parts have been written, but are
not tested.  Everything you read in the documentation should be there.

Support modules:
   01report.t          maintaining warnings/errors/trace

Basic Mail::Message parts:
   11field.t           test storage of one header-line
   12head0h.t          test storage of one header
   13body0s.t          test storage of a string body
   13body1l.t          test storage of a lines body

Test reading with Mail::Box::Parser::C
   20c0avail.t         check the availability of Inline::C
   20c1field.t         check folding of headerlines.
   20c2head.t          test reading a header from file
   20c3bodys.t         read body from file into scalar
   20c4bodyl.t         read body from file into array
   20c5bodyd.t         read body delayed, and then trigger the load

Test reading with Mail::Box::Parser::Perl
   21p0

Test writing
   30migrate.t         move message between folders

Other message handling
   35reply0s.t         signature stripping
   35reply1rs.         create a reply subject
   35reply2m.t         create message replies

Mbox-folders:
   42mbox1r.t          reading mbox
   42mbox2w.t          writing mbox
   42mbox3d.t          delay loading mbox
   42mbox4a.t          appending to opened and unopened mbox folders
   42mbox5c.t          folders and sub-folders in mbox
   42mbox6t.t          test threads

MH-folders:
   43mh1r.t            reading mh
   43mh2w.t            writing mh
   43mh3a.t            appending to opened and unopened mh folders
   43mh5c.t            folders and sub-folders mh
   43mh6t.t            test threads mh
   43mh7s.t            mh_sequences and labels

Folder manager:
   60mgr.t             locating/opening/closing folders.
   61threads.t         thread detection and processing.

Locking:
   70dotlock.t         dotlock mechanism
   71filelck.t         locking based on file-handle
   72nfslock.t         dotlocking over NFS

Ties:
   82tieary.t          accessing folder as array.
   83tiehash.t         accessing folder as hash.

NOT Tested
==========

MH index-file  (but I expect it to work)

So many things are tested, but quite a lot is still lacking.  Please
contribute.
